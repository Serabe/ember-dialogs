{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/acceptance/index-test.js","dummy/tests/app.lint-test.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/integration/components/ember-dialogs-test.js","dummy/tests/page-object.js","dummy/tests/pages/components/_component.js","dummy/tests/pages/components/dialogs.js","dummy/tests/pages/index.js","dummy/tests/test-helper.js","dummy/tests/tests.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('dummy/tests/acceptance/index-test', ['qunit', 'ember-cli-chai/qunit', 'dummy/tests/helpers/module-for-acceptance', 'dummy/tests/pages/index'], function (_qunit, _qunit2, _moduleForAcceptance, _index) {\n  'use strict';\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step(\"next\", value);\n            }, function (err) {\n              step(\"throw\", err);\n            });\n          }\n        }\n\n        return step(\"next\");\n      });\n    };\n  }\n\n  (0, _moduleForAcceptance.default)('Acceptance | index');\n\n  var m = void 0;\n\n  (0, _qunit.test)('initial state', (0, _qunit2.withChai)(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(expect) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return visit('/');\n\n            case 2:\n\n              m = \"backdrop existence\";\n              expect(_index.default.backdrop.exists, m).false;\n\n              m = \"dialog existence\";\n              expect(_index.default.dialog.exists, m).false;\n\n            case 6:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()));\n\n  (0, _qunit.test)('prompt', (0, _qunit2.withChai)(function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(expect) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return visit('/');\n\n            case 2:\n              _context2.next = 4;\n              return _index.default.promptTrigger.click();\n\n            case 4:\n\n              m = \"#0 Initial: value\";\n              expect(_index.default.alertValue.text, m).equal(\"false\");\n\n              m = \"#0 Initial: backdrop visibility\";\n              expect(_index.default.backdrop.visible, m).true;\n\n              m = \"#0 Initial: dialog visibility\";\n              expect(_index.default.dialog.visible, m).true;\n\n              m = \"#0 Initial: message text\";\n              expect(_index.default.dialog.message.text, m).equal(\"Type in a new value\");\n\n              m = \"#0 Initial: input value\";\n              expect(_index.default.dialog.input.value, m).equal(\"foo\");\n\n              m = \"#0 Initial: input placeholder\";\n              expect(_index.default.dialog.input.placeholder, m).equal(\"Please type something\");\n\n              m = \"#0 Initial: ok button text\";\n              expect(_index.default.dialog.buttonOk.text, m).equal(\"Yup\");\n\n              m = \"#0 Initial: cancel button text\";\n              expect(_index.default.dialog.buttonCancel.text, m).equal(\"Nah\");\n\n              _context2.next = 22;\n              return _index.default.dialog.input.fill('bar');\n\n            case 22:\n              _context2.next = 24;\n              return _index.default.dialog.buttonOk.click();\n\n            case 24:\n\n              m = \"#1 After click on OK: value\";\n              expect(_index.default.promptValue.text, m).equal(\"bar\");\n\n              m = \"#1 After click on OK: backdrop visibility\";\n              expect(_index.default.backdrop.visible, m).false;\n\n              m = \"#1 After click on OK: dialog visibility\";\n              expect(_index.default.dialog.visible, m).false;\n\n            case 30:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()));\n});","define('dummy/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('transitions.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transitions.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  var run = Ember.run;\n  function destroyApp(application) {\n    run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = Ember.RSVP.resolve;\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('dummy/tests/helpers/start-app', ['exports', 'dummy/app', 'dummy/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  var merge = Ember.merge;\n  var run = Ember.run;\n  function startApp(attrs) {\n    var attributes = merge({}, _environment.default.APP);\n    attributes = merge(attributes, attrs); // use defaults, but you can override;\n\n    return run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('dummy/tests/integration/components/ember-dialogs-test', ['ember-qunit', 'ember-cli-chai/qunit', 'ember-cli-page-object', 'dummy/tests/pages/components/dialogs', 'ember-test-helpers/wait'], function (_emberQunit, _qunit, _emberCliPageObject, _dialogs, _wait) {\n  'use strict';\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step(\"next\", value);\n            }, function (err) {\n              step(\"throw\", err);\n            });\n          }\n        }\n\n        return step(\"next\");\n      });\n    };\n  }\n\n  var $ = Ember.$;\n  var run = Ember.run;\n\n\n  var page = (0, _emberCliPageObject.create)(_dialogs.alert);\n  var dialogs = void 0,\n      m = void 0;\n\n  (0, _emberQunit.moduleForComponent)('ember-dialogs', 'Integration | Component | ember dialogs', {\n    integration: true,\n    beforeEach: function beforeEach() {\n      page.setContext(this);\n      this.inject.service('dialogs');\n      dialogs = this.get('dialogs');\n    },\n    afterEach: function afterEach() {\n      page.removeContext();\n      $('body').removeClass('-ember-dialogs-block-scrolling');\n    }\n  });\n\n  (0, _emberQunit.test)('alert, most basic features', (0, _qunit.withChai)(function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = false;\n\n\n              m = '#0 Initial: dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(0);\n\n              m = '#0 Initial: backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(0);\n\n              m = '#0 Initial: body hasClass -ember-dialogs-block-scrolling';\n              expect($('body').hasClass('-ember-dialogs-block-scrolling'), m).false;\n\n              run(function () {\n                dialogs.alert({\n                  message: 'lol',\n                  actionOk: function actionOk() {\n                    value = true;\n                  }\n                });\n              });\n\n              _context.next = 11;\n              return (0, _wait.default)();\n\n            case 11:\n\n              m = '#1 After triggering dialog: dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(1);\n\n              m = '#1 After triggering dialog: backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(1);\n\n              m = '#1 After triggering dialog: message text';\n              expect($('.ember-dialogs-dialog-message').text().trim(), m).equal('lol');\n\n              m = '#1 After triggering dialog: button text';\n              expect($('.ember-dialogs-dialog-button').text().trim(), m).equal('OK');\n\n              m = '#1 After triggering dialog: body hasClass -ember-dialogs-block-scrolling';\n              expect($('body').hasClass('-ember-dialogs-block-scrolling'), m).true;\n\n              run(function () {\n                return $('.ember-dialogs-dialog-button').click();\n              });\n              _context.next = 24;\n              return (0, _wait.default)();\n\n            case 24:\n\n              m = '#2 After dismissing dialog: dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(0);\n\n              m = '#2 After dismissing dialog: backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(0);\n\n              m = '#2 After dismissing dialog: value';\n              expect(value, m).ok;\n\n              m = '#2 After dismissing dialog: body hasClass -ember-dialogs-block-scrolling';\n              expect($('body').hasClass('-ember-dialogs-block-scrolling'), m).false;\n\n            case 32:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('empty message', (0, _qunit.withChai)(function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(expect) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              run(function () {\n                dialogs.alert();\n              });\n              _context2.next = 4;\n              return (0, _wait.default)();\n\n            case 4:\n\n              m = 'message existence';\n              expect($('.ember-dialogs-dialog-message'), m).length(0);\n\n            case 6:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('backdrop click should dismiss - alert mode', (0, _qunit.withChai)(function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = false;\n\n\n              run(function () {\n                dialogs.alert({\n                  message: 'lol',\n                  actionOk: function actionOk() {\n                    value = true;\n                  }\n                });\n              });\n              _context3.next = 5;\n              return (0, _wait.default)();\n\n            case 5:\n\n              run(function () {\n                return $('.ember-dialogs-backdrop').click();\n              });\n              _context3.next = 8;\n              return (0, _wait.default)();\n\n            case 8:\n\n              m = 'dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(0);\n\n              m = 'backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(0);\n\n              m = 'value';\n              expect(value, m).true;\n\n            case 14:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('backdrop click should dismiss - prompt mode', (0, _qunit.withChai)(function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = false;\n\n\n              run(function () {\n                dialogs.prompt({\n                  message: 'lol',\n                  actionOk: function actionOk() {\n                    value = true;\n                  },\n                  actionCancel: function actionCancel() {\n                    value = ':D';\n                  }\n                });\n              });\n              _context4.next = 5;\n              return (0, _wait.default)();\n\n            case 5:\n\n              run(function () {\n                return $('.ember-dialogs-backdrop').click();\n              });\n              _context4.next = 8;\n              return (0, _wait.default)();\n\n            case 8:\n\n              m = 'dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(0);\n\n              m = 'backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(0);\n\n              m = 'value';\n              expect(value, m).equal(':D');\n\n            case 14:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    return function (_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('backdrop click should not call cancel action when cancelVisible is false', (0, _qunit.withChai)(function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = false;\n\n\n              run(function () {\n                dialogs.prompt({\n                  message: 'lol',\n                  cancelVisible: false,\n                  actionOk: function actionOk() {\n                    value = true;\n                  },\n                  actionCancel: function actionCancel() {\n                    value = ':D';\n                  }\n                });\n              });\n              _context5.next = 5;\n              return (0, _wait.default)();\n\n            case 5:\n\n              m = 'cancel button existence';\n              expect($('.ember-dialogs-dialog-button.-ember-dialogs-cancel'), m).length(0);\n\n              run(function () {\n                return $('.ember-dialogs-backdrop').click();\n              });\n              _context5.next = 10;\n              return (0, _wait.default)();\n\n            case 10:\n\n              m = 'dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(0);\n\n              m = 'backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(0);\n\n              m = 'value';\n              expect(value, m).false;\n\n            case 16:\n            case 'end':\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    return function (_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('backdrop click should not dismiss when backdropClickable=false', (0, _qunit.withChai)(function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = false;\n\n\n              run(function () {\n                dialogs.alert({\n                  message: 'lol',\n                  backdropClickable: false,\n                  actionOk: function actionOk() {\n                    value = true;\n                  }\n                });\n              });\n              _context6.next = 5;\n              return (0, _wait.default)();\n\n            case 5:\n\n              run(function () {\n                return $('.ember-dialogs-backdrop').click();\n              });\n              _context6.next = 8;\n              return (0, _wait.default)();\n\n            case 8:\n\n              m = 'dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(1);\n\n              m = 'backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(1);\n\n              m = 'value';\n              expect(value, m).false;\n\n            case 14:\n            case 'end':\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    return function (_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('no backdrop, no action, no blockScrolling', (0, _qunit.withChai)(function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(expect) {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              run(function () {\n                dialogs.alert({\n                  message: 'lol',\n                  backdrop: false,\n                  blockScrolling: false\n                });\n              });\n              _context7.next = 4;\n              return (0, _wait.default)();\n\n            case 4:\n\n              m = 'body hasClass -ember-dialogs-block-scrolling';\n              expect($('body').hasClass('-ember-dialogs-block-scrolling'), m).false;\n\n              run(function () {\n                return $('.ember-dialogs-backdrop').click();\n              });\n              _context7.next = 9;\n              return (0, _wait.default)();\n\n            case 9:\n\n              m = 'dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(1);\n\n              m = 'backdrop existence';\n              expect($('.ember-dialogs-backdrop'), m).length(0);\n\n              run(function () {\n                return $('.ember-dialogs-dialog-button').click();\n              });\n              _context7.next = 16;\n              return (0, _wait.default)();\n\n            case 16:\n\n              m = 'dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(0);\n\n            case 18:\n            case 'end':\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    }));\n\n    return function (_x7) {\n      return _ref8.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('confirm', (0, _qunit.withChai)(function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = false;\n\n\n              run(function () {\n                dialogs.confirm({\n                  message: 'lol',\n                  actionCancel: function actionCancel() {\n                    value = true;\n                  }\n                });\n              });\n              _context8.next = 5;\n              return (0, _wait.default)();\n\n            case 5:\n\n              m = 'cancel button existence';\n              expect($('.ember-dialogs-dialog-button.-ember-dialogs-cancel'), m).length(1);\n\n              m = 'cancel button text';\n              expect($('.ember-dialogs-dialog-button.-ember-dialogs-cancel').text().trim(), m).equal('Cancel');\n\n              run(function () {\n                return $('.ember-dialogs-dialog-button.-ember-dialogs-cancel').click();\n              });\n              _context8.next = 12;\n              return (0, _wait.default)();\n\n            case 12:\n\n              m = 'value';\n              expect(value, m).true;\n\n            case 14:\n            case 'end':\n              return _context8.stop();\n          }\n        }\n      }, _callee8, this);\n    }));\n\n    return function (_x8) {\n      return _ref9.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('custom button labels', (0, _qunit.withChai)(function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(expect) {\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              run(function () {\n                dialogs.confirm({\n                  message: 'lol',\n                  labelOk: 'Yup',\n                  labelCancel: 'Nah'\n                });\n              });\n              _context9.next = 4;\n              return (0, _wait.default)();\n\n            case 4:\n\n              m = 'ok button text';\n              expect($('.ember-dialogs-dialog-button.-ember-dialogs-ok').text().trim(), m).equal('Yup');\n\n              m = 'cancel button text';\n              expect($('.ember-dialogs-dialog-button.-ember-dialogs-cancel').text().trim(), m).equal('Nah');\n\n            case 8:\n            case 'end':\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n\n    return function (_x9) {\n      return _ref10.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('prompt', (0, _qunit.withChai)(function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"xIZPKiBp\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ember-dialogs\\\"],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = 'hee';\n\n\n              run(function () {\n                dialogs.prompt({\n                  message: 'lol',\n                  placeholder: 'woo',\n                  value: value,\n                  actionOk: function actionOk(userInput) {\n                    value = userInput;\n                  }\n                });\n              });\n              _context10.next = 5;\n              return (0, _wait.default)();\n\n            case 5:\n\n              m = 'cancel button existence';\n              expect($('.ember-dialogs-dialog-button.-ember-dialogs-cancel'), m).length(1);\n\n              m = 'input existence';\n              expect($('.ember-dialogs-dialog-input'), m).length(1);\n\n              m = 'input placeholder';\n              expect($('.ember-dialogs-dialog-input').attr('placeholder'), m).equal('woo');\n\n              m = 'input initial value';\n              expect($('.ember-dialogs-dialog-input').val(), m).equal('hee');\n\n              run(function () {\n                return $('.ember-dialogs-dialog-input').val('heeyoo');\n              });\n              _context10.next = 16;\n              return (0, _wait.default)();\n\n            case 16:\n              run(function () {\n                return $('.ember-dialogs-dialog-input').change();\n              });\n              _context10.next = 19;\n              return (0, _wait.default)();\n\n            case 19:\n              run(function () {\n                return $('.ember-dialogs-dialog-button.-ember-dialogs-ok').click();\n              });\n              _context10.next = 22;\n              return (0, _wait.default)();\n\n            case 22:\n\n              m = 'value';\n              expect(value, m).equal('heeyoo');\n\n              run(function () {\n                dialogs.prompt({\n                  message: 'lol',\n                  placeholder: 'woo',\n                  value: 'naa',\n                  actionOk: function actionOk(userInput) {\n                    value = userInput;\n                  }\n                });\n              });\n              _context10.next = 27;\n              return (0, _wait.default)();\n\n            case 27:\n\n              m = 'input value after second invocation';\n              expect($('.ember-dialogs-dialog-input').val(), m).equal('naa');\n\n            case 29:\n            case 'end':\n              return _context10.stop();\n          }\n        }\n      }, _callee10, this);\n    }));\n\n    return function (_x10) {\n      return _ref11.apply(this, arguments);\n    };\n  }()));\n\n  (0, _emberQunit.test)('prompt block form', (0, _qunit.withChai)(function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(expect) {\n      var value;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"7ONfMhfH\",\n                \"block\": \"{\\\"symbols\\\":[\\\"params\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"ember-dialogs\\\",null,null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"dialog\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,1,[\\\"message\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"message\\\"],[7],[1,[19,1,[\\\"message\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\\n\\\"],[4,\\\"if\\\",[[25,\\\"eq\\\",[[19,1,[\\\"type\\\"]],\\\"prompt\\\"],null]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[1,[25,\\\"input\\\",null,[[\\\"class\\\",\\\"value\\\",\\\"placeholder\\\",\\\"enter\\\"],[\\\"input\\\",[19,1,[\\\"userInput\\\"]],[19,1,[\\\"placeholder\\\"]],[25,\\\"action\\\",[[19,0,[]],[19,1,[\\\"actionOk\\\"]],[19,1,[\\\"userInput\\\"]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\\n        \\\"],[6,\\\"button\\\"],[9,\\\"class\\\",\\\"ok\\\"],[3,\\\"action\\\",[[19,0,[]],[19,1,[\\\"actionOk\\\"]],[19,1,[\\\"userInput\\\"]]]],[7],[0,\\\"\\\\n          \\\"],[1,[19,1,[\\\"labelOk\\\"]],false],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n  \\\\n\\\"],[4,\\\"if\\\",[[19,1,[\\\"shouldDisplayCancel\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"button\\\"],[9,\\\"class\\\",\\\"cancel\\\"],[3,\\\"action\\\",[[19,0,[]],[19,1,[\\\"actionCancel\\\"]]]],[7],[0,\\\"\\\\n            \\\"],[1,[19,1,[\\\"labelCancel\\\"]],false],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"      \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              value = 'bah';\n\n\n              m = '#0 Initial: dialog existence';\n              expect($('.dialog'), m).length(0);\n\n              run(function () {\n                dialogs.prompt({\n                  message: 'lol',\n                  placeholder: 'wut',\n                  value: value,\n                  actionOk: function actionOk(userInput) {\n                    value = userInput;\n                  }\n                });\n              });\n              _context11.next = 7;\n              return (0, _wait.default)();\n\n            case 7:\n\n              m = '#1 After triggering dialog: dialog existence';\n              expect($('.dialog'), m).length(1);\n\n              m = '#1 After triggering dialog: message text';\n              expect($('.message').text().trim(), m).equal('lol');\n\n              m = '#1 After triggering dialog: OK button text';\n              expect($('.ok').text().trim(), m).equal('OK');\n\n              m = '#1 After triggering dialog: Cancel button text';\n              expect($('.cancel').text().trim(), m).equal('Cancel');\n\n              m = '#1 After triggering dialog: input value';\n              expect($('.input').val(), m).equal('bah');\n\n              m = '#1 After triggering dialog: input placeholder';\n              expect($('.input').attr('placeholder'), m).equal('wut');\n\n              run(function () {\n                return $('.input').val('bleh');\n              });\n              _context11.next = 22;\n              return (0, _wait.default)();\n\n            case 22:\n              run(function () {\n                return $('.input').change();\n              });\n              _context11.next = 25;\n              return (0, _wait.default)();\n\n            case 25:\n              run(function () {\n                return $('.ok').click();\n              });\n              _context11.next = 28;\n              return (0, _wait.default)();\n\n            case 28:\n\n              m = '#2 After dismissing dialog: dialog existence';\n              expect($('.ember-dialogs-dialog'), m).length(0);\n\n              m = '#2 After dismissing dialog: value';\n              expect(value, m).equal('bleh');\n\n              value = 'nom';\n\n              run(function () {\n                dialogs.prompt({\n                  message: 'lol',\n                  placeholder: 'wut',\n                  value: value,\n                  actionOk: function actionOk(userInput) {\n                    value = userInput;\n                  }\n                });\n              });\n              _context11.next = 36;\n              return (0, _wait.default)();\n\n            case 36:\n\n              m = '#3 After re-triggering dialog: input value';\n              expect($('.input').val(), m).equal('nom');\n\n            case 38:\n            case 'end':\n              return _context11.stop();\n          }\n        }\n      }, _callee11, this);\n    }));\n\n    return function (_x11) {\n      return _ref12.apply(this, arguments);\n    };\n  }()));\n});","define('dummy/tests/page-object', ['exports', 'ember-cli-page-object'], function (exports, _emberCliPageObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fullScope = exports.getContext = exports.findElement = exports.findElementWithAssert = exports.buildSelector = exports.visitable = exports.value = exports.triggerable = exports.text = exports.property = exports.notHasClass = exports.isVisible = exports.isHidden = exports.is = exports.hasClass = exports.selectable = exports.fillable = exports.create = exports.count = exports.contains = exports.collection = exports.clickable = exports.clickOnText = exports.attribute = exports.alias = undefined;\n  Object.defineProperty(exports, 'buildSelector', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.buildSelector;\n    }\n  });\n  Object.defineProperty(exports, 'findElementWithAssert', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.findElementWithAssert;\n    }\n  });\n  Object.defineProperty(exports, 'findElement', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.findElement;\n    }\n  });\n  Object.defineProperty(exports, 'getContext', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.getContext;\n    }\n  });\n  Object.defineProperty(exports, 'fullScope', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.fullScope;\n    }\n  });\n  exports.alias = _emberCliPageObject.alias;\n  exports.attribute = _emberCliPageObject.attribute;\n  exports.clickOnText = _emberCliPageObject.clickOnText;\n  exports.clickable = _emberCliPageObject.clickable;\n  exports.collection = _emberCliPageObject.collection;\n  exports.contains = _emberCliPageObject.contains;\n  exports.count = _emberCliPageObject.count;\n  exports.create = _emberCliPageObject.create;\n  exports.fillable = _emberCliPageObject.fillable;\n  exports.selectable = _emberCliPageObject.fillable;\n  exports.hasClass = _emberCliPageObject.hasClass;\n  exports.is = _emberCliPageObject.is;\n  exports.isHidden = _emberCliPageObject.isHidden;\n  exports.isVisible = _emberCliPageObject.isVisible;\n  exports.notHasClass = _emberCliPageObject.notHasClass;\n  exports.property = _emberCliPageObject.property;\n  exports.text = _emberCliPageObject.text;\n  exports.triggerable = _emberCliPageObject.triggerable;\n  exports.value = _emberCliPageObject.value;\n  exports.visitable = _emberCliPageObject.visitable;\n  exports.default = {\n    alias: _emberCliPageObject.alias,\n    attribute: _emberCliPageObject.attribute,\n    clickOnText: _emberCliPageObject.clickOnText,\n    clickable: _emberCliPageObject.clickable,\n    collection: _emberCliPageObject.collection,\n    contains: _emberCliPageObject.contains,\n    count: _emberCliPageObject.count,\n    create: _emberCliPageObject.create,\n    fillable: _emberCliPageObject.fillable,\n    hasClass: _emberCliPageObject.hasClass,\n    is: _emberCliPageObject.is,\n    isHidden: _emberCliPageObject.isHidden,\n    isVisible: _emberCliPageObject.isVisible,\n    notHasClass: _emberCliPageObject.notHasClass,\n    property: _emberCliPageObject.property,\n    selectable: _emberCliPageObject.fillable,\n    text: _emberCliPageObject.text,\n    triggerable: _emberCliPageObject.triggerable,\n    value: _emberCliPageObject.value,\n    visitable: _emberCliPageObject.visitable\n  };\n});","define(\"dummy/tests/pages/components/_component\", [\"exports\", \"dummy/tests/page-object\"], function (exports, _pageObject) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.jquery = jquery;\n  exports.default = component;\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var $ = Ember.$;\n\n  // import _ from 'lodash'\n\n\n  // A helper to leverage jQuery for page component queries\n  function jquery(callback) {\n    var errorIfMissing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    return {\n      isDescriptor: true,\n\n      get: function get() {\n        var $el = (0, _pageObject.findElement)(this);\n\n        if (errorIfMissing && !$el.length) {\n          throw new Error(\"Element \" + this.scope + \" not found.\");\n        }\n\n        return callback($el);\n      }\n    };\n  }\n\n  function component() {\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    // If a descriptor is passed as the first arg\n    if (scope === Object(scope)) {\n      descriptor = scope;\n      scope = null;\n    }\n\n    return _extends({}, scope ? { scope: scope, itemScope: scope } : {}, { // inject the scope only if it was provided\n\n      $: jquery(function ($el) {\n        return $el;\n      }),\n      attribute: (0, _pageObject.attribute)(),\n      blur: jquery(function ($el) {\n        return $el.blur();\n      }),\n      checked: jquery(function ($el) {\n        return $el.is(\":checked\");\n      }),\n      click: (0, _pageObject.clickable)(),\n      contains: jquery(function ($el) {\n        return function (selector) {\n          return $el.find(selector).length > 0;\n        };\n      }, false),\n      disabled: jquery(function ($el) {\n        return $el.is(\"[disabled]\");\n      }),\n      empty: jquery(function ($el) {\n        return $el.is(\":empty\") || !$el.children().length && !$el.text().trim().length;\n      }),\n      exists: jquery(function ($el) {\n        return $el.length > 0;\n      }, false), // false: don't spit an error if element isn't found\n      fill: (0, _pageObject.fillable)(),\n      focus: jquery(function ($el) {\n        return $el.focus();\n      }),\n      index: jquery(function ($el) {\n        return $el.index();\n      }),\n      hasClass: jquery(function ($el) {\n        return function (className) {\n          return $el.hasClass(className);\n        };\n      }),\n      active: (0, _pageObject.hasClass)(\"active\"),\n      disabledViaClass: (0, _pageObject.hasClass)(\"disabled\"),\n      visible: (0, _pageObject.isVisible)(),\n      placeholder: (0, _pageObject.attribute)(\"placeholder\"),\n      text: (0, _pageObject.text)(),\n      value: (0, _pageObject.value)(),\n\n      keyup: function keyup(code) {\n        var event = new $.Event(\"keyup\");\n        event.which = code;\n        event.keyCode = code;\n        return this.$.trigger(event);\n      }\n    }, descriptor);\n  }\n\n  /**\n   * A test-selector driven decorator for the `component` function\n   *\n   * First argument -- first argument of test selector\n   * Last argument -- optional object for component()\n   * In between -- optional arguments for test selector\n   */\n  // export function t (selectorBefore, ...args) {\n  //   const obj =\n  //         _.isObject(args[args.length - 1])\n  //           ? args.pop()\n  //           : {}\n  //\n  //   const selectorAfter = testSelector(selectorBefore, ...args)\n  //   return component(selectorAfter, obj)\n  // }\n});","define('dummy/tests/pages/components/dialogs', ['exports', 'dummy/tests/pages/components/_component'], function (exports, _component) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.dialog = exports.backdrop = undefined;\n  var backdrop = exports.backdrop = (0, _component.default)('.ember-dialogs-backdrop');\n\n  var dialog = exports.dialog = (0, _component.default)('.ember-dialogs-dialog', {\n    resetScope: true,\n\n    message: (0, _component.default)('.ember-dialogs-dialog-message'),\n    input: (0, _component.default)('.ember-dialogs-dialog-input'),\n    buttonOk: (0, _component.default)('.ember-dialogs-dialog-button.-ember-dialogs-ok'),\n    buttonCancel: (0, _component.default)('.ember-dialogs-dialog-button.-ember-dialogs-cancel')\n  });\n});","define('dummy/tests/pages/index', ['exports', 'ember-cli-page-object', 'dummy/tests/pages/components/_component', 'dummy/tests/pages/components/dialogs'], function (exports, _emberCliPageObject, _component, _dialogs) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = (0, _emberCliPageObject.create)({\n    visit: (0, _emberCliPageObject.visitable)('/'),\n\n    alertValue: (0, _component.default)('.route-index-alertValue'),\n    alertTrigger: (0, _component.default)('.route-index-alertTrigger'),\n\n    confirmValue: (0, _component.default)('.route-index-confirmValue'),\n    confirmTrigger: (0, _component.default)('.route-index-confirmTrigger'),\n\n    promptValue: (0, _component.default)('.route-index-promptValue'),\n    promptTrigger: (0, _component.default)('.route-index-promptTrigger'),\n\n    backdrop: _dialogs.backdrop,\n    dialog: _dialogs.dialog\n  });\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('dummy/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('acceptance/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/index-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/ember-dialogs-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ember-dialogs-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pages/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pages/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingstIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhyhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;","file":"tests.js"}